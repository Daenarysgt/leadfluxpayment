DROP FUNCTION IF EXISTS get_funnel_metrics(UUID); CREATE OR REPLACE FUNCTION get_funnel_metrics(p_funnel_id UUID) RETURNS TABLE (total_sessions BIGINT, completion_rate NUMERIC, interaction_rate NUMERIC) SECURITY DEFINER LANGUAGE plpgsql AS $$ BEGIN RETURN QUERY WITH metrics AS (SELECT COUNT(DISTINCT session_id) as total_sessions, (COUNT(CASE WHEN is_complete THEN 1 END)::NUMERIC / NULLIF(COUNT(DISTINCT session_id), 0) * 100) as completion_rate, (AVG(current_step::NUMERIC / (SELECT COUNT(*)::NUMERIC FROM funnels f LEFT JOIN funnel_steps fs ON f.id = fs.funnel_id WHERE f.id = p_funnel_id)) * 100) as interaction_rate FROM funnel_progress WHERE funnel_id = p_funnel_id) SELECT COALESCE(total_sessions, 0), COALESCE(completion_rate, 0), COALESCE(interaction_rate, 0) FROM metrics; END; $$; GRANT EXECUTE ON FUNCTION get_funnel_metrics(UUID) TO authenticated;
